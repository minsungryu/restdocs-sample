buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'org.springframework.boot' version '2.1.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'net.ltgt.apt' version '0.9'
    id 'org.asciidoctor.convert' version '1.5.9'
}

group = 'me.minsungryu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

ext {
    snippetsDir = file('build/generated-snippets')
    mapstructDir = 'build/generated/source/apt/main'
}

repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDirs += mapstructDir
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

build {
    dependsOn bootJar
}

dependencies {
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

    compile('org.mapstruct:mapstruct-jdk8:1.2.0.Final')
    annotationProcessor('org.mapstruct:mapstruct-processor:1.2.0.Final')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')

    runtimeOnly('com.h2database:h2')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    asciidoctor('org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.RELEASE')
}
